# Find and replace the following:
# INSERT_APP_NAME -> Title cased name of the app, e.g. "Data Catalog"
# INSERT_APP_ID -> lowercase identifier, e.g. "datacatalog". Also replace filename!
# INSERT_APP_ROOT -> subdirectory of repo where a "terraform" folder can be found
#
# Make sure following secrets are set:
# ACTIONS_APP_ID -> Application ID for GitHub App installed in your organization with repo read permissions (for reading terraform-modules from svvsaga/terraform-modules)
# ACTIONS_APP_PEM -> Private key for app installation

name: INSERT_APP_ID - Create Terraform release
on:
  workflow_dispatch:
    inputs:
      ref:
        description: Which commit, tag or branch to plan terraform from. Defaults to same as workflow is run from if empty.
        required: false
  push:
    branches:
      - $default_branch
    paths:
      - INSERT_APP_ROOT/terraform/**
      - "!**/*.md"

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF: ${{ inputs.ref || github.sha }}
          APP_ID: INSERT_APP_ID
          RELEASE_VERSION: ${{ github.run_number }}
        with:
          tag_name: ${{ env.APP_ID }}-TF-v${{ env.RELEASE_VERSION }}
          release_name: ${{ env.APP_ID }}-TF-v${{ env.RELEASE_VERSION }}
          commitish: ${{ env.REF }}
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}

  publish_plans:
    name: Publish Terraform plans
    needs: create_release
    uses: svvsaga/github-actions-public/.github/workflows/publish-terraform-plans.yml@v24.0.0
    with:
      ref: ${{ inputs.ref || github.sha }}
      app_root: INSERT_APP_ROOT
      release_id: ${{ needs.create_release.outputs.release_id }}
    secrets:
      github_app_private_key: ${{ secrets.ACTIONS_APP_PEM }}
      github_app_id: ${{ secrets.ACTIONS_APP_ID }}
